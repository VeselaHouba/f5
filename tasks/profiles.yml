---
- name: Reset variables
  set_fact:
    profile_merged: {}
    profile_cleaned: {}
  tags: f5_profiles

- name: Add provider info to profile
  set_fact:
    profile_merged: "{{ profile | combine({'provider': f5_provider }) }}"
  tags: f5_profiles

- name: Exctract type from profile
  set_fact:
    profile_type: "{{ profile_merged.type }}"
  tags: f5_profiles

# Loop through whole array and recreate new one without specific key
- name: Remove type from profile
  set_fact:
    profile_cleaned:
      "{{ profile_cleaned | default({}) |
      combine({dictitem.key: dictitem.value}) }}"
  when: dictitem.key not in ['type']
  with_dict: "{{ profile_merged }}"
  tags: f5_profiles
  loop_control:
    loop_var: dictitem
  # hide passwords
  no_log: true

# - name: Debug - remove after testing
#   debug:
#     var: profile_cleaned
#   tags: f5_profiles

- name: Deploy http profiles
  bigip_profile_http: "{{ profile_cleaned }}"
  notify: Save config
  delegate_to: localhost
  tags: f5_profiles
  when: profile_type == 'http'

- name: Deploy http compression profiles
  bigip_profile_http_compression: "{{ profile_cleaned }}"
  notify: Save config
  delegate_to: localhost
  tags: f5_profiles
  when: profile_type == 'http_compression'

- name: Deploy client ssl profiles
  bigip_profile_client_ssl: "{{ profile_cleaned }}"
  notify: Save config
  delegate_to: localhost
  tags: f5_profiles
  when: profile_type == 'client_ssl'

- name: Deploy persistence cookie profile
  bigip_profile_persistence_cookie: "{{ profile_cleaned }}"
  notify: Save config
  delegate_to: localhost
  tags: f5_profiles
  when: profile_type == 'persistence_cookie'
